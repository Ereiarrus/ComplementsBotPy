name: Python application

on:
  push

permissions:
  contents: read

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/python-init
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Install mypy, flake8 and pylint
      run: |
        pip install mypy
        pip install flake8
        pip install pylint

    - name: Check for syntax errors or undefined names
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Lint with flake8
      run: |
        # The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      run: |
        pylint env_reader.py
        pylint main.py
        pylint complements_bot
        pylint test_complements_bot
    - name: Typecheck with mypy
      run: |
        mypy .

  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/python-init
      with:
        secrets: ${{ toJSON(secrets) }}

    - name: Install pytest
      run: |
        pip install pytest

    - name: Test with pytest
      run: |
        echo "$FIREBASE_CONFIG" > .firebase_config.json
        pytest

  deploy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'  # Only deploy if this was a push to main
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/python-init
      with:
        secrets: ${{ toJSON(secrets) }}

    - name: set up Docker
      run: |
        sudo apt-get update
        sudo apt install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt update
        apt-cache policy docker-ce
        sudo apt install docker-ce
        
        pip install cython
        python -m cython main.py --embed
        
        docker build -t complements-bot-py .
    - name: deploying
      run: |
        echo "Deploying..."
